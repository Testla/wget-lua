# Adapted from Dockerfile
name: Build Wget-AT binary
run-name: Build ${{ github.ref }}
on: [push]
jobs:
  build-binary:
    runs-on: ubuntu-22.04
    env:
      TLSTYPE: openssl
      LC_ALL: C
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          printf "cwd is %s" "$(pwd)"
          set -eux
          case "${TLSTYPE}" in
            openssl) SSLPKG=libssl-dev;;
            gnutls) SSLPKG=gnutls-dev;;
            *) echo "Unknown TLSTYPE ${TLSTYPE}"; exit 1;;
          esac
          DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get -qqy --no-install-recommends -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-unsafe-io update
          DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get -qqy --no-install-recommends -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-unsafe-io upgrade
          DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get -qqy --no-install-recommends -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-unsafe-io install "${SSLPKG}" build-essential git bzip2 bash rsync gcc zlib1g-dev autoconf autoconf-archive flex make automake gettext libidn-dev autopoint texinfo gperf ca-certificates wget pkg-config libpsl-dev libidn2-dev libluajit-5.1-dev libgpgme-dev libpcre2-dev

      - name: Install zstd
        run: |
          cd /tmp
          wget https://github.com/facebook/zstd/releases/download/v1.4.4/zstd-1.4.4.tar.gz
          tar xf zstd-1.4.4.tar.gz
          cd zstd-1.4.4
          make
          make install

      - name: Install c-ares
        run: |
          cd /tmp
          wget https://github.com/c-ares/c-ares/releases/download/cares-1_23_0/c-ares-1.23.0.tar.gz
          tar xf c-ares-1.23.0.tar.gz
          cd c-ares-1.23.0
          ./configure
          make
          make install

      - name: Update ld cache
        run: ldconfig

      - name: Compile
        run: |
          printf "cwd is %s" "$(pwd)"
          ./bootstrap
          ./configure --with-ssl="${TLSTYPE}" --with-cares --disable-nls
          make -j $(nproc)
          src/wget --help | grep -iE "gnu|warc|lua|dns|host|resolv"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: src/wget
